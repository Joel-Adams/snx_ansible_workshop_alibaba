---
#---------------------------------------------------
#  ecs INI Creation
#---------------------------------------------------
- name: Template Ansible Hosts File
  template: dest="{{ inventory_working_dir }}/hosts"  src=hosts.j2
  tags:
    - tf_create
#---------------------------------------------------
#  ecs INI Creation
#---------------------------------------------------
- name: Template ecs INI File
  template: dest="{{ inventory_working_dir }}/ecs.ini"  src=ecs.ini.j2
  tags:
    - tf_create
#---------------------------------------------------
#  SSH Key
#---------------------------------------------------
- name: Create directory for SSH keys
  file:
    path: "~/.ssh/ansible/"
    state: directory
    mode: 0755

- name: Create working directory
  file:
    path: "{{ terraform_working_dir }}"
    state: directory
    mode: 0755

- name: ensure SSH key is removed
  file:
    path: "~/.ssh/ansible/{{ item }}"
    state: absent
  with_items:
    - id_rsa
    - id_rsa.pub

- name: ensure SSH key is generated
  command: ssh-keygen -b 2048 -t rsa -f ~/.ssh/ansible/id_rsa -N ''
  register: ecs_key
  args:
    creates: ~/.ssh/asnible/id_rsa

- name: Copy ecs_user_script Script
  template: dest="{{ terraform_working_dir }}/ecs_user_script.tpl"  src=ecs_user_script.sh
  tags:
    - tf_create

- name: Remove old keypair
  file:
    state: absent
    path: "{{ terraform_working_dir }}/{{ workshop_prefix }}-tower"

- name: Create ssh keypair
  copy: src=~/.ssh/ansible/id_rsa
        dest="{{ terraform_working_dir }}/{{ workshop_prefix }}-tower"
        mode=0400
  tags:
    - tf_create
#---------------------------------------------------
# ENV Script
#---------------------------------------------------
- name: Copy ENV Association Script
  template: dest="{{ terraform_working_dir }}/env.sh"  src=env.sh
  tags:
    - tf_create

- name: Run the ENV Shell Script
  shell: source {{ terraform_working_dir }}/env.sh
  tags:
    - tf_create
#---------------------------------------------------
# Terraform.io
#---------------------------------------------------
- name: Template Terraform files locally to run
  template: dest="{{ terraform_working_dir }}/alicloud.tf"  src=alicloud.tf.j2
  tags:
    - tf_create

- name: Template terraform.tfvars
  template: dest="{{ terraform_working_dir }}/terraform.tfvars"  src=terraform.tfvars.j2
  tags:
    - tf_create

- name: Check Terraform version
  shell: terraform version
  register: tf
  changed_when: false

- set_fact:
    tf_version: "{{ tf.stdout_lines[0] | regex_replace('^Terraform.*v') }}"

- name: Initialize Terraform to discover plugins
  command: terraform init
  args:
    chdir: "{{ terraform_working_dir }}"
  when: tf_version | version_compare('0.10.0', '>=')
  tags:
    - tf_create

- name: Run Terraform ( < 0.11.0 ) Infra Create
  command: terraform apply
  args:
    chdir: "{{ terraform_working_dir }}"
  when: tf_version | version_compare('0.11.0', '<')
  tags:
    - tf_create

- name: Run Terraform ( >= 0.11.0 ) Infra Create
  command: terraform apply -auto-approve
  args:
    chdir: "{{ terraform_working_dir }}"
  when: tf_version | version_compare('0.11.0', '>=')
  tags:
    - tf_create
#---------------------------------------------------
# DNS Association Script
#---------------------------------------------------
- name: Copy DNS Association Script
  template: dest="{{ terraform_working_dir }}/dns_record.sh"  src=dns_record.sh
  tags:
    - tf_create

- name: Run the DNS Shell Script
  command: sh "{{ terraform_working_dir }}/dns_record.sh"
  args:
    chdir: "{{ terraform_working_dir }}"
  tags:
    - tf_create

- name: Copy DNS Association Script
  template: dest="{{ terraform_working_dir }}/dns_record2.sh"  src=dns_record2.sh
  tags:
    - tf_create

- name: Run the DNS Shell Script
  command: sh "{{ terraform_working_dir }}/dns_record2.sh"
  args:
    chdir: "{{ terraform_working_dir }}"
  tags:
    - tf_create
#---------------------------------------------------
# EIP Association Script
#---------------------------------------------------
- name: Copy EIP Association Script
  template: dest="{{ terraform_working_dir }}/eip_association.sh"  src=eip_association.sh
  tags:
    - tf_create

- name: Run the EIP Shell Script
  command: sh "{{ terraform_working_dir }}/eip_association.sh"
  args:
    chdir: "{{ terraform_working_dir }}"
  tags:
    - tf_create

- name: Copy EIP Association Script
  template: dest="{{ terraform_working_dir }}/eip_association2.sh"  src=eip_association2.sh
  tags:
    - tf_create

- name: Run the EIP Shell Script
  command: sh "{{ terraform_working_dir }}/eip_association2.sh"
  args:
    chdir: "{{ terraform_working_dir }}"
  tags:
    - tf_create
#---------------------------------------------------
# Terraform.io DNS
#---------------------------------------------------
- name: Initialize Terraform to discover plugins
  command: terraform init
  args:
    chdir: "{{ terraform_working_dir }}/dns_record"
  when: tf_version | version_compare('0.10.0', '>=')
  tags:
    - tf_create

- name: Run Terraform ( < 0.11.0 ) DNS Create
  command: terraform apply
  args:
    chdir: "{{ terraform_working_dir }}/dns_record"
  when: tf_version | version_compare('0.11.0', '<')
  tags:
    - tf_create

- name: Run Terraform ( >= 0.11.0 ) DNS Create
  command: terraform apply -auto-approve
  args:
    chdir: "{{ terraform_working_dir }}/dns_record"
  when: tf_version | version_compare('0.11.0', '>=')
  tags:
    - tf_create
#---------------------------------------------------
# Terraform.io EIP
#---------------------------------------------------
- name: Initialize Terraform to discover plugins
  command: terraform init
  args:
    chdir: "{{ terraform_working_dir }}/eip_address"
  when: tf_version | version_compare('0.10.0', '>=')
  tags:
    - tf_create

- name: Run Terraform ( < 0.11.0 ) EIP Create
  command: terraform apply
  args:
    chdir: "{{ terraform_working_dir }}/eip_address"
  when: tf_version | version_compare('0.11.0', '<')
  tags:
    - tf_create

- name: Run Terraform ( >= 0.11.0 ) EIP Create
  command: terraform apply -auto-approve
  args:
    chdir: "{{ terraform_working_dir }}/eip_address"
  when: tf_version | version_compare('0.11.0', '>=')
  tags:
    - tf_create
